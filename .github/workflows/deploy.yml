name: Continuous Integration - iBurguer

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: iburguer
  ROOT_PROJECT_DIRECTORY: FIAP
  PROJECT_NAME: FIAP.Diner.API
  TEST_PROJECT_NAME: FIAP.Diner.Tests
  AWS_EKS_CLUSTER_NAME: iburguer-iburguer-cluster
  AWS_REGION: us-east-1

jobs:
  build-test:
    runs-on: ubuntu-latest
    environment:
      name: Iburguer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.x"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore Dependencies
        run: dotnet restore ${{ env.ROOT_PROJECT_DIRECTORY}}/${{ env.PROJECT_NAME}}

      - name: Build Application
        run: dotnet build ${{ env.ROOT_PROJECT_DIRECTORY}}/${{ env.PROJECT_NAME}} --no-restore --configuration Release

      - name: Run Tests
        run: dotnet test ${{ env.ROOT_PROJECT_DIRECTORY}}/${{ env.TEST_PROJECT_NAME}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
            scheme: semver
            increment: patch

      - name: Build and Push Docker Image
        run: |
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} ${{ env.ROOT_PROJECT_DIRECTORY}} --file ${{ env.ROOT_PROJECT_DIRECTORY}}/${{ env.PROJECT_NAME}}/Dockerfile
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
        env:
            DOCKER_BUILDKIT: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.AWS_EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Create Helm Template
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
        with:
          command: |
            helm version
            kubectl version
            kubectl cluster-info
            helm template iburguer --set configmap.connectionstring.host=${{ secrets.DATABASE_HOST }} --set configmap.connectionstring.password=${{ secrets.DATABASE_PASSWORD }}  ./FIAP/chart > FIAP/k8s/artifacts.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply --validate=false -f FIAP/k8s/artifacts.yaml
